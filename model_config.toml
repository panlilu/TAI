# 模型配置文件
# 此文件定义了可用的AI模型及其配置

# 模型列表
[[models]]
id = "deepseek/deepseek-chat"
name = "DeepSeek Chat"
description = "DeepSeek Chat是一个通用的对话模型，适合日常对话和一般任务"

[[models]]
id = "deepseek/deepseek-reason"
name = "DeepSeek Reason"
description = "DeepSeek Reason是一个专注于推理能力的模型，适合需要逻辑分析的任务"

[[models]]
id = "openrouter/qwen/qwq-32b:free"
name = "QwQ 32B"
description = "QwQ 32B 是一个大规模预训练模型，提供免费使用的版本，适合多种复杂任务"

[[models]]
id = "lm_studio/qwen2.5-vl-7b-instruct"
name = "Qwen2.5 VL 7B（本地运行）"
description = "Qwen2.5 VL是一个多模态模型，具有图像理解能力，可用于生成图片描述"

[[models]]
id = "lm_studio/mistral-small-3.1-24b-instruct-2503"
name = "Mistral Small 3.1 24B（本地运行）"
description = "Mistral Small 3.1 24B是一个多模态模型，具有图片理解能力同时也有很强的对话能力"

[[models]]
id = "lm_studio/gemma-3-12b-it"
name = "Gemma3-12b（本地运行）"
description = "Gemma3 12B 是一个多模态模型，具有图片理解能力同时也有很强的对话能力"

# 任务配置
[tasks]

[tasks.convert_to_markdown]
description = "将文档转换为Markdown格式的任务"
# 增加图片描述模型配置项
available_image_description_models = [
    "lm_studio/qwen2.5-vl-7b-instruct",
    "lm_studio/gemma-3-12b-it"
]
default_image_description_model = "lm_studio/qwen2.5-vl-7b-instruct"

[tasks.convert_to_markdown.default_config]
conversion_type = "simple"
mistral_api_key = ""  # 可以留空，优先从环境变量MISTRAL_API_KEY获取
image_description_model = "lm_studio/qwen2.5-vl-7b-instruct"  # 用于图片描述的模型
enable_image_description = true  # 是否启用图片描述功能

[tasks.process_with_llm]
available_models = [
    "deepseek/deepseek-chat",
    "deepseek/deepseek-reason",
    "openrouter/qwen/qwq-32b:free"
]
default_model = "openrouter/qwen/qwq-32b:free"
description = "使用LLM处理文本内容的任务"

[tasks.process_with_llm.default_config]
temperature = 0.7
max_tokens = 2000
top_p = 0.95

[tasks.extract_structured_data]
available_models = [
    "deepseek/deepseek-reason",
    "openrouter/qwen/qwq-32b:free"
]
default_model = "openrouter/qwen/qwq-32b:free"
description = "从文本中提取结构化数据的任务"

[tasks.extract_structured_data.default_config]
temperature = 0.2
max_tokens = 3000
top_p = 0.8
extraction_prompt = """请从以下审阅报告中提取结构化数据，以YAML格式返回：

1. 摘要
2. 结构评分 (1-10)
3. 内容完整性评分 (1-10)
4. 语言表达评分 (1-10)
5. 专业性评分 (1-10)
6. 格式规范评分 (1-10)
7. 总体评分 (1-10)
8. 问题清单 (列表)
9. 改进建议 (列表)

使用以下YAML格式：

```yaml
summary: 简短摘要
structure_score: 7
completeness_score: 8
language_score: 9
professionalism_score: 7
format_score: 8
overall_score: 8
issues:
  - 第一个问题
  - 第二个问题
suggestions:
  - 第一个建议
  - 第二个建议
```

审阅报告:""" 